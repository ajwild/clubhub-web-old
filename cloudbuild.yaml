steps:
  # See if node_modules cache helps once there are more packages installed
  # - name: 'google/cloud-sdk:alpine'
  #   id: 'load-cache'
  #   args:
  #     - 'bash'
  #     - '-c'
  #     - 'gsutil cp gs://$PROJECT_ID/$REPO_NAME/package-lock.json previous-package-lock.json && cmp package-lock.json previous-package-lock.json && gsutil cp gs://$PROJECT_ID/$REPO_NAME/node-modules.tar.gz - | tar -xz || exit 0'
  - name: 'google/cloud-sdk:alpine'
    id: 'load-secrets'
    waitFor:
      - '-'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'gcloud secrets versions access latest --secret ${REPO_NAME}-env > .env'
  - name: 'node:12-alpine'
    id: 'install'
    waitFor:
      - '-'
    entrypoint: 'npm'
    args:
      - 'install'
  - name: 'node:12-alpine'
    id: 'test'
    waitFor:
      - 'install'
    entrypoint: 'npm'
    args:
      - 'test'
  - name: 'gcr.io/kaniko-project/executor:latest'
    id: 'build-image'
    waitFor:
      - 'load-secrets'
      # Potential issue when building Docker image while installing node_modules in /workspace
      # error building image: error building stage: lstat /workspace/node_modules/file-uri-to-path: no such file or directory
      # error building image: error building stage: failed to get files used from context: failed to resolve sources: resolving sources: lstat /workspace/node_modules/.staging/glob-630fb191: no such file or directory
      - 'install'
    args:
      - '--destination=gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA'
      - '--cache=true'
  - name: 'google/cloud-sdk:alpine'
    id: 'deploy-image'
    waitFor:
      - 'test'
      - 'build-image'
    args:
      - 'gcloud'
      - 'run'
      - 'deploy'
      - '$REPO_NAME'
      - '--image'
      - 'gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
  - name: 'docker:stable'
    id: 'prepare-hosting'
    waitFor:
      - 'build-image'
    entrypoint: 'sh'
    args:
      - '-c'
      - 'docker cp $(docker create gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA):/usr/src/app/.next/static ./public/_next/'
  - name: 'node:12-alpine'
    id: 'deploy-hosting'
    waitFor:
      - 'test'
      - 'prepare-hosting'
      - 'deploy-image'
    entrypoint: '/workspace/node_modules/.bin/firebase'
    args:
      - 'deploy'
      - '--project'
      - '$PROJECT_ID'
      - '--token'
      - '$_FIREBASE_TOKEN'
      - '--only'
      - 'hosting'
  # See if node_modules cache helps once there are more packages installed
  # - name: 'google/cloud-sdk:alpine'
  #   id: 'save-cache'
  #   args:
  #     - 'bash'
  #     - '-c'
  #     - 'gsutil cp package-lock.json gs://$PROJECT_ID/$REPO_NAME/package-lock.json && tar -cz node_modules | gsutil cp - gs://$PROJECT_ID/$REPO_NAME/node-modules.tar.gz'
